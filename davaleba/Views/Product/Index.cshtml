@using PagedList.Mvc;
@using PagedList;
@model IPagedList<davaleba.Models.Product>

@{
    ViewBag.Title = "Index";
}
<head>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    <style>
         .btn {
            margin-top: 10px;
        }
    </style>

</head>

<script>
    $(document).ready(function () {

        $(function () {
            $('#name').autocomplete({
                source: '@Url.Action("GetProductByName")'
                })

          })
     });
</script>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


<br />

<form method="get" action="/Product/Index">
    <input type="text" name="Name" value="@ViewBag.Name" id="name" placeholder="სახელი" />
    <input type="submit" class="btn btn-primary" value="ძებნა" />
</form>
<br />
<div id="main-body">
    <table class="table">
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.First().Name)*@
                @Ajax.ActionLink("Name", "SortBy", new { sortBy = ViewBag.SortByName, name = ViewBag.Name},
                       new AjaxOptions()
                       {
                           HttpMethod = "Get",
                           UpdateTargetId = "main-body",
                           InsertionMode = InsertionMode.Replace
                        })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().InStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Percent)
            </th>
            <th>
                @Ajax.ActionLink("Last_Price", "SortBy", new { sortBy = ViewBag.SortBySurname, name = ViewBag.Name},
                       new AjaxOptions()
                       {
                           HttpMethod = "Get",
                           UpdateTargetId = "main-body",
                           InsertionMode = InsertionMode.Replace
                       })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Brand.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Users.First_Name)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InStock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Percent)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Last_Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Brand.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Users.First_Name)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary btn-md" })
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-primary btn-md" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-primary btn-md" })
                </td>
            </tr>
        }

    </table>
    @Html.PagedListPager(Model, page => Url.Action("SortBy", new { fromPage = false, page=page, sortBy = ViewBag.CurrentSort, name = ViewBag.Name}),
      PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "main-body" }))
</div>
<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>
